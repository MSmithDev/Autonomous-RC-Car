<!-- 
  Simulate a carlike robot with the teb_local_planner:
  - rplidar node
  - transforms
  - IMU
  - scanmatcher
  - map_server
  - move_base
  - static map
  - amcl
  - rviz view
 -->
<launch>

        <!--  ************** Global Parameters ***************  -->
        <param name="/use_sim_time" value="false"/>

	<!--  ************** Lidar ***************  -->
  	<node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
		<param name="serial_port"         type="string" value="/dev/ttyUSB0"/>  
  		<param name="serial_baudrate"     type="int"    value="115200"/>
  		<param name="frame_id"            type="string" value="laser"/>
  		<param name="inverted"            type="bool"   value="false"/>
  		<param name="angle_compensate"    type="bool"   value="true"/>
  	</node>
	
	<!--  ************** IMU ***************  -->
	<node name="IMUNode" pkg="rtimulib_ros" type="rtimulib_ros">
		<remap from="/imu" to="/imu/data"/>

	</node>

	<!--  ************** Transforms ***************  -->
	

	<node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0 0 0 0 /base_footprint /base_link 40" />


	<node pkg="tf" type="static_transform_publisher" name="base_laser_link_broadcaster" args="0 0 0 3.14 0 0 /base_link /laser 40" />

	<!--  ************** ScanMatcher ***************  -->

	<node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">
    		<param name="fixed_frame" value = "/odom"/>
    		<param name="base_frame" value="/base_footprint"/>
    		<param name="use_alpha_beta" value="true"/>
    		<param name="publish_tf" value="true"/>
    		<param name="publish_odom" value="true"/>
    		<param name="max_iterations" value="15"/>
    		<param name="use_imu" value="true"/>
    		<param name="use_odom" value="false"/>
    		<param name="outliers_adaptive_order" value="0.99"/>
    		<param name="outliers_maxPerc" value="0.99"/>
	</node>
	
	<!--  ************** Map Server ***************  -->

	<arg name="map_file" default="$(find jwuracecar)/maps/hallway/hallwaymap.yaml"/>

  	
  	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />


        <!--  ************** Navigation ***************  -->
	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
  	  	<rosparam file="$(find jwuracecar)/params/carlike/costmap_common_params.yaml" command="load" ns="global_costmap" />
  	 	<rosparam file="$(find jwuracecar)/params/carlike/costmap_common_params.yaml" command="load" ns="local_costmap" />
  		<rosparam file="$(find jwuracecar)/params/carlike/local_costmap_params.yaml" command="load" />
  		<rosparam file="$(find jwuracecar)/params/carlike/global_costmap_params.yaml" command="load" />
  		<rosparam file="$(find jwuracecar)/params/carlike/teb_local_planner_params.yaml" command="load" />




		<param name="base_global_planner" value="global_planner/GlobalPlanner" />
		<param name="planner_frequency" value="1.0" />
		<param name="planner_patience" value="5.0" />

		<param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
		<param name="controller_frequency" value="5.0" />
		<param name="controller_patience" value="15.0" />

                <param name="clearing_rotation_allowed" value="false" /> <!-- Our carlike robot is not able to rotate in place -->
	</node>


	<!--  ********************* AMCL **********************  -->


	<node pkg="amcl" type="amcl" name="amcl" output="screen">
		<rosparam file="$(find teb_local_planner_tutorials)/cfg/amcl_params.yaml" command="load" />

	        <param name="initial_pose_x"            value="2"/>
		<param name="initial_pose_y"            value="2"/>
		<param name="initial_pose_a"            value="0"/>
	</node>

	  <!--  **************** Visualisation ****************  -->

	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find teb_local_planner_tutorials)/cfg/rviz_navigation.rviz"/>
	
	<node pkg="rosserial_python" type="serial_node.py" name="serialnode" args="/dev/ttyACM0" output="screen"/>

	<!--  **************** Commander ****************  -->

	<node name="command_sender_node" pkg="jwuracecar" type="commander.py" />


</launch>
